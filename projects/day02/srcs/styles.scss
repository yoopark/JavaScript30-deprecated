html {
	background-size: cover;
	font: {
		family: 'helvetica neue';
		size: 10px;
	}
	text-align: center;
}

body {
	/*
	** 요소를 정 가운데 배치하는 전형적인 방법.
	**
	** min-height: 100vh;를 통해 브라우저 전체를 height로 잡는다.
	** display: flex; 를 통해 정렬하고자 하는 위 요소를 container로 만든다.
	** align-items: center; 를 통해 중간 선을 중심으로 요소가 병렬로 이어지게 한다. 
	** item이 하나이기 때문에 이 요소만 가지면 좌측 중간에 배치되며 align-items; center;도 함께 사용해야 하지만,
	** 여기서는 그 하위 요소도 있기 때문에 html에 text-align: center; 를 사용하여 해결. 
	*/
	display: flex;
	margin: 0;
	min-height: 100vh;
	flex: 1;
	align-items: center;
	font-size: 2rem;
}

.clock {
	position: relative;
	padding: 2rem;
	margin: 50px auto;
	width: 30rem;
	height: 30rem;
	border: 20px solid #EFD2DB;
	border-radius: 50%;
	box-shadow:
	  0 0 0 4px rgba(0,0,0,0.1),
	  inset 0 0 0 3px #C6A8B1,
	  inset 0 0 10px black,
	  0 0 10px rgba(0,0,0,0.2);
	  .clock-face {
		position: relative;
		width: 100%;
		height: 100%;
		transform: translateY(-3px); // 시계침 길이 보정

		@mixin hand { // CSS에서 하려면 html 파일을 애초에 <div class="hand clock-hand">로 만들었어야 함.
			position: absolute;
			top: 50%;
			transform: rotate(90deg);
			transition: {
				property: all;
				duration: .05s;
				timing-function: cubic-bezier(0.1, 2.7, 0.58, 1);
			}
		}
		.hour-hand {
			@include hand;
			width: 36%;
			height: 10px;
			left: 20%;
			background: #A9919E;
			transform-origin: 80%; // 시계침이 끝을 축으로 돌아야되니까. 80%로 한 건 시각적 안정감을 위함.
		}
		.min-hand {
			@include hand;
			width: 60%;
			height: 10px;
			background: #A9919E;
			transform-origin: 80%;
		}		
		.second-hand {
			@include hand;
			width: 60%;
			height: 2px;
			background: #E38691;
			transform-origin: 80%;
		}
	}
}